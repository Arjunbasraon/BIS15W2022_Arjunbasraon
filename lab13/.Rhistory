ggVennDiagram(questions_list, category.names = c("evil", "red eye", "male", "bald"))
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
good_vec <- superhero_info %>%
filter(Alignment == "good")%>%
pull(name)
female_vec <- superhero_info %>%
filter(Gender == "Female") %>%
pull(name)
good_vec <- superhero_info %>%
filter(Alignment == "good")%>%
pull(name)
female_vec <- superhero_info %>%
filter(Gender == "Female") %>%
pull(name)
male_vec <- superhero_info %>%
filter(Gender == "Male") %>%
pull(name)
new_list <- list(good_vec, female_vec, male_vec)
new_list <- list(good_vec, female_vec, male_vec)
ggVennDiagram(new_list, category.names = c("good", "female", "male"))
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency %>%
ggplot(aes(
label = powers,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 25) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 25) +
theme_minimal()
hr_reptilia %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 25) +
theme_minimal()
hr_taxon_count %>%
ggplot(aes(
label = taxon,
size = n,
color = taxon
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 40) +
theme_minimal()
hr_reptilia %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
theme_minimal()
hr_reptilia <- homerange %>%
filter(class== "reptilia")%>%
count(family)
hr_reptilia
hr_reptilia %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
theme_minimal()
hr_taxon_count <- homerange %>%
count(taxon)
hr_taxon_count
hr_taxon_count <- homerange %>%
count(taxon)
hr_taxon_count
hr_taxon_count %>%
ggplot(aes(
label = taxon,
size = n,
color = taxon
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 40) +
theme_minimal()
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 25) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 25) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
install.packages(albersusa)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
install.packages(albersusa)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("shiny")
library(shiny)
#library(devtools)
#install_github("andreacirilloac/updateR")
#library(updateR)
#updateR()
#install.packages("shiny")
library(shiny)
#library(devtools)
#install_github("andreacirilloac/updateR")
#library(updateR)
#updateR()
install.packages("shiny")
library(shiny)
#library(devtools)
#install_github("andreacirilloac/updateR")
#library(updateR)
#updateR()
install.packages("shiny")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("shiny")
library(shiny)
#library(devtools)
#install_github("andreacirilloac/updateR")
#library(updateR)
#updateR()
install.packages("shiny")
library(shiny)
library(devtools)
#install_github("andreacirilloac/updateR")
#library(updateR)
#updateR()
install.packages("shiny")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("shiny")
library(shiny)
library(devtools)
install_github("andreacirilloac/updateR")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("shiny")
library(shiny)
library(devtools)
install_github("andreacirilloac/updateR")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
spider_list[[3]]
spider_list[[3]]
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list)
names[[(spider_list)]]
names(spider_list[[3]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list[[1]])
names_list <- strsplit(names, split = " .csv")
names_list
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
names(table_A)
names(table_B)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
left_spider <- left_join(spiders_all, spiders_locs, by="Accession")
left_spider
class(spiders_with_locs$Date)
class(left_spider$Date)
day <- today()
str(day)
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
dmy(left_spider$Date)
as.Date(left_spider$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
dmy n(left_spider$Date)
ymd(dateformat1)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(left_spider, file = "left_spider.csv", row.names = FALSE)
install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
#install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
library(albersusa)
install.packages("albersusa")
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- read_csv(here("lab12", "data", "left_spider.csv")) %>% clean_names()
spiders <- read_csv(here("lab12", "data", "left_spider.csv")) %>% clean_names()
spiders <- read_csv(here("lab12", "left_spider.csv")) %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders <- spiders %>% filter(latitude<=42)
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
grizzly <- read_csv(here("lab12", "data", "bear-sightings.csv"))
lat <- c(55.02, 70.37)
long <- c(-131.3, -166.2)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = grizzly, aes(longitude, latitude), size=0.8) +
labs(x = "Longitude", y = "Latitude", title = "Ursos arctos")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
install.packages(albersusa)
install.packages(albersusa)
library(albersusa)
grizzly <- read_csv(here("lab12", "data", "bear-sightings.csv"))
grizzly <- read_csv(here("lab12", "data", "bear-sightings.csv"))
grizzly
wolf <- read_csv(here("lab12", "data", "wolves_data", "wolves_dataset.csv"))
wolf
grizzly %>%
select(latitude, longitude) %>%
summary()
lat <- c(55.02, 70.37)
long <- c(-166.2, -131.3)
bbox <- make_bbox(long, lat, f = 0.05)
grizzlymap <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(grizzlymap)
ggmap(grizzlymap) +
geom_point(data = grizzly, aes(longitude, latitude)) +
labs(x= "Longitude", y= "Latitude", title="Bear sightings")
wolves %>%
select(latitude, longitude) %>%
summary()
wolf %>%
select(latitude, longitude) %>%
summary()
wolf <- read_csv(here("lab12", "data", "wolves_data", "wolves_dataset.csv"))
wolf
wolf %>%
select(lat, long) %>%
summary()
wolf %>%
filter(pop == -AK)
lat <- c(33.89, 80.50)
long <- c(-157.84, -82.42)
bbox <- make_bbox(long, lat, f = 0.05)
lat <- c(33.89, 80.50)
long <- c(-157.84, -82.42)
wbox <- make_bbox(long, lat, f = 0.05)
wolfmap <- get_map(wbox, maptype = "terrain", source = "stamen")
ggmap(wolfmap)
wolfmap <- get_map(wbox, maptype = "terrain-lines", source = "stamen")
ggmap(wolfmap)
filter(wolf, pop != "AK.PEN")
wolf2 <- filter(wolf, pop != "AK.PEN")
wolf2
summary(wolf2)
wolf2 %>%
select(lat, long) %>%
summary()
lat <- c(33.89, 80.50)
long <- c(-151.06, -82.42)
cbox <- make_bbox(long, lat, f = 0.05)
wolf2map <- get_map(cbox, maptype = "terrain-lines", source = "stamen")
ggmap(wolf2map)
ggmap(wolf2map) +
geom_point(data = wolf2, aes(long, lat)) +
labs(x= "Longitude", y= "Latitude", title="wolf population")
ggmap(wolf2map) +
geom_point(data = wolf2, aes(long, lat, size=pop.density)) +
labs(x= "Longitude", y= "Latitude", title="wolf population")
ggmap(wolf2map) +
geom_point(data = wolf2, aes(long, lat, fill=pop.density)) +
labs(x= "Longitude", y= "Latitude", title="wolf population")
qqplot()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(palmerpenguins)
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("shiny")
library(shiny)
library(devtools)
install_github("andreacirilloac/updateR")
